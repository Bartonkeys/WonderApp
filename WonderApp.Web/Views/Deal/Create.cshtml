@model WonderApp.Web.Models.DealCreateModel

@{
    ViewBag.Title = "Create Deal";
}

<form id="createWonderForm" action="" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="tab-content">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="tab-pane active" id="tab-details">
                        <fieldset>
                            <div class="form-header">Create a wonder</div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="input-group">
                                        <span class="input-group-addon">#</span>
                                        @Html.TextBoxFor(model => model.DealModel.Title, htmlAttributes: new { style = "width: 100%" })
                                    </div>

                                    @Html.ValidationMessageFor(model => model.DealModel.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.IntroDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.DealModel.IntroDescription, htmlAttributes: new { style = "width: 100%", rows = 3, maxlength = 75 })
                                    @Html.ValidationMessageFor(model => model.DealModel.IntroDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.DealModel.Description, htmlAttributes: new { style = "width: 100%", rows = "5", maxlength = 200 })
                                    @Html.ValidationMessageFor(model => model.DealModel.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Url, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.DealModel.Url, htmlAttributes: new { style = "width: 100%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Url, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.TagString, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="hidden" class="select2-offscreen" id="tagstring-hdn" style="width:100%" value="@Model.TagString" />
                                    <input type="text" class="hidden" id="tagstring" name="TagString" value="@Model.TagString" />
                                    @Html.ValidationMessageFor(model => model.TagString, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.AlwaysAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.CheckBoxFor(model => model.DealModel.AlwaysAvailable)
                                    @Html.ValidationMessageFor(model => model.DealModel.AlwaysAvailable, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group col-md-12">
                                    @Html.LabelFor(model => model.DealModel.Ages, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @foreach(var cb in model.DealModel.Ages)
                                        @Html.CheckBoxFor(model => model.DealModel.Ages)
                                        @Html.ValidationMessageFor(model => model.DealModel.AlwaysAvailable, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.DealModel.ExpiryDate, htmlAttributes: new { @class = "datepicker", @style = "width: 50%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.ExpiryDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Cost.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.DealModel.Cost.Id, Model.CostRanges, "Please Select", htmlAttributes: new { style = "width: 50%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Cost.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Category.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.DealModel.Category.Id, Model.Categories, "Please Select", htmlAttributes: new { style = "width: 50%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Category.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Season.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.DealModel.Season.Id, Model.Seasons, htmlAttributes: new { style = "width: 50%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Season.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Gender.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.DealModel.Gender.Id, Model.Genders, htmlAttributes: new { style = "width: 50%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Gender.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @*@Html.LabelFor(model => model.DealModel.Company.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.DealModel.Company.Id, Model.Companies, "Please Select", htmlAttributes: new { style = "width: 100%" })
                                        @Html.ValidationMessageFor(model => model.DealModel.Company.Id, "", new { @class = "text-danger" })
                                    </div>*@
                                @Html.LabelFor(model => model.DealModel.Company.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="hidden" class="select2-offscreen" id="company-hdn" style="width:50%" value="@Model.DealModel.Company.Id" />
                                    @*<input type="text" class="hidden" id="company-id" name="CompanyId" value="@Model.DealModel.Company.Id" />*@
                                    @Html.TextBoxFor(m => m.DealModel.Company.Id, new { id = "company-id", @class = "hidden" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Company.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.DealModel.Phone, htmlAttributes: new { style = "width: 50%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Ages, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.CheckBoxListFor(x => x.AgeString,  // checkbox list name, 'PostedCities.CityIDs' in this case
                                                  x => x.AgesAvailable,       // List<City>()
                                                  x => x.Id,                    // City.Id
                                                  x => x.Name,                  // City.Name
                                                  x => x.DealModel.Ages)       <!--- List<city>() - should contain only cities to be selected -->
                                   
                                    @Html.ValidationMessageFor(model => model.AgeString, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane active" id="tab-image">
                        <fieldset>
                            <div class="form-header">Add Image</div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(m => m.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Image, new { type = "file" })
                                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane active" id="tab-location">
                        <fieldset>
                            <div class="form-header">Add Location</div>

                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Location.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.DealModel.Location.Name)
                                    <a href="#" id="searchLocation" onclick="event.preventDefault();" class="btn btn-info">Search</a>
                                    @Html.ValidationMessageFor(model => model.DealModel.Location.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Address.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.DealModel.Address.AddressLine1, htmlAttributes: new { style = "width: 100%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Address.AddressLine1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.Address.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.DealModel.Address.AddressLine2, htmlAttributes: new { style = "width: 100%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.Address.AddressLine2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.DealModel.City.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.DealModel.City.Id, Model.Cities, "Please Select", htmlAttributes: new { style = "width: 50%" })
                                    @Html.ValidationMessageFor(model => model.DealModel.City.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div id="mapContainer">
                                    <div id="map_canvas"></div>
                                    <a href="#" id="removeLocation" style="@(Model.DealModel.Location.Id == 0 ? "" : "display:none;")">Remove Location from this widget</a>
                                    @Html.HiddenFor(m => m.DealModel.Location.Latitude, new { @id = "Latitude" })
                                    @Html.HiddenFor(m => m.DealModel.Location.Longitude, new { @id = "Longitude" })
                                </div>
                            </div>

                        </fieldset>
                    </div>

                </div>
            </div>
            <div class="panel-footer">
                <div id="container_actions" class="row">
                    <div class="col-md-offset-5 col-md-7">
                        <a title="Create Wonder" class="btn btn-primary" onclick="saveWonder()">Create Wonder</a>
                        @Html.LabelFor(m => m.DealModel.Priority) @Html.CheckBoxFor(m => m.DealModel.Priority)
                    </div>
                </div>
            </div>

        </div>
    </div>
</form>

    <div>
        @Html.ActionLink("Back to Wonders", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/tagSearchJs")
        @Scripts.Render("~/bundles/location")

        <script type="text/javascript">

            //function saveWonder() {
            //    if ($('#createWonderForm').valid()) {
            //        $.isLoading({ text: "Creating wonder..." });
            //    }
            //}

            function submitForm() {
                if ($('#createWonderForm').valid()) {
                    $.isLoading({ text: "Saving wonder..." });
                }
                $('#createWonderForm').submit();
            }

            function saveWonder() {

                    if ($("#Image").val() == "") {
                        submitForm();
                    }
                    else {

                        var filename = getNameFromPath($("#Image").val());
                        if (filename != null) {
                            var extension = filename.substr((filename.lastIndexOf('.') + 1));
                            if (extension != 'jpg') {
                                var errorArray = {};
                                errorArray["Image"] = 'Incorrect filetype - only .jpg files can be uploaded';
                                $('#createWonderForm').validate().showErrors(errorArray);
                                $("#Image").focus()
                                return;
                            }

                        }


                        var _URL = window.URL || window.webkitURL;
                        var file = $("#Image")[0].files[0]
                        img = new Image();

                        img.onload = function () {
                            var wid = this.width;
                            var ht = this.height;
                            if (wid != 410 || ht != 546) {
                                var errorArray = {};
                                errorArray["Image"] = 'Invalid image dimensions - please ensure your image is exactly 410px x 546px. (Attempted image dimensions : ' + wid + 'px x ' + ht + 'px )';
                                $('#createWonderForm').validate().showErrors(errorArray);
                                $("#Image").focus()
                                return;
                            }
                            else {
                                submitForm();
                            }


                        };

                        img.src = _URL.createObjectURL(file);
                    }
                


            }

            function getNameFromPath(strFilepath) {
                var objRE = new RegExp(/([^\/\\]+)$/);
                var strName = objRE.exec(strFilepath);

                if (strName == null) {
                    return null;
                }
                else {
                    return strName[0];
                }
            }

            if (GetQueryStringParams("edit") == "true") {
                toastr.success("Wonder successfully created");
            }
            $(document).ready(function() {
                initializeLocationTab('#DealModel_Location_Name');
                $('form').areYouSure();
                $('form').areYouSure({ 'message': 'Your wonder details are not saved!' });
            });

           
            
        </script>

    }


    @*<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
        <script src="http://cdnjs.cloudflare.com/ajax/libs/select2/3.5.0/select2.js"></script>*@


