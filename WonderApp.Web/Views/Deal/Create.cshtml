@model WonderApp.Web.Models.DealViewModel

@{
    ViewBag.Title = "Create";
}

<style>
    #map_canvas img,
    .google-maps img { max-width: none; }

    #mapContainer {
        clear: both;
        height: 200px;
        margin: 15px 0 10px 0;
        padding: 0;
    }

    #map_canvas {
        height: 100%;
        width: 100%;
    }
</style>

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DealViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        
        <div class="form-group">
            @Html.LabelFor(model => model.DealModel.Title, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DealModel.Title)
                @Html.ValidationMessageFor(model => model.DealModel.Title, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DealModel.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DealModel.Description)
                @Html.ValidationMessageFor(model => model.DealModel.Description, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DealModel.Url, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DealModel.Url)
                @Html.ValidationMessageFor(model => model.DealModel.Url, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TagString, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TagString)
                @Html.ValidationMessageFor(model => model.TagString, "", new {@class = "text-danger"})
                Seperate by space
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DealModel.ExpiryDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DealModel.ExpiryDate, htmlAttributes: new {@class = "datepicker"})
                @Html.ValidationMessageFor(model => model.DealModel.ExpiryDate, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DealModel.Cost.Id, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DealModel.Cost.Id, Model.CostRanges, "Please Select")
                @Html.ValidationMessageFor(model => model.DealModel.Cost.Id, "", new {@class = "text-danger"})                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DealModel.Category.Id, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DealModel.Category.Id, Model.Categories, "Please Select")
                @Html.ValidationMessageFor(model => model.DealModel.Category.Id, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DealModel.Company.Id, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DealModel.Company.Id, Model.Companies, "Please Select")
                @Html.ValidationMessageFor(model => model.DealModel.Company.Id, "", new {@class = "text-danger"})
            </div>
        </div>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.DealModel.Location.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.DealModel.Location.Name)
                    <a href="#" id="searchLocation" onclick="event.preventDefault();" class="btn">Search</a>
                </div>               
            </div>            
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"></label>
            <div id="mapContainer" class="col-md-10">
                <div id="map_canvas"></div>
                <a href="#" id="removeLocation" style="@(Model.DealModel.Location.Id == 0 ? "" : "display:none;")">Remove Location from this widget</a>
                @Html.HiddenFor(m => m.DealModel.Location.Latitude, new { id = "Latitude" })
                @Html.HiddenFor(m => m.DealModel.Location.Longitude, new { id = "Longitude" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/location")

    <script type="text/javascript">
        $(document).ready(function() {
            initializeLocationTab();
        })
    </script>
   
}
